---
export const prerender = true;
import { type CollectionEntry, getCollection, render } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import { Badge } from "@/components/ui/badge";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project, index) => {
    const slug =
      project.data.slug ||
      project.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    // 计算上一个和下一个项目的索引（循环）
    const prevIndex = index === 0 ? projects.length - 1 : index - 1;
    const nextIndex = index === projects.length - 1 ? 0 : index + 1;

    const prevProject = projects[prevIndex];
    const nextProject = projects[nextIndex];

    const prevSlug =
      prevProject.data.slug ||
      prevProject.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    const nextSlug =
      nextProject.data.slug ||
      nextProject.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    return {
      params: {
        slug: slug,
      },
      props: {
        project,
        prevProject: {
          title: prevProject.data.title,
          slug: prevSlug,
        },
        nextProject: {
          title: nextProject.data.title,
          slug: nextSlug,
        },
      },
    };
  });
}

type Props = {
  project: CollectionEntry<"projects">;
  prevProject: { title: string; slug: string };
  nextProject: { title: string; slug: string };
};

const { project, prevProject, nextProject } = Astro.props;
const { Content } = await render(project);
---

<style is:inline>
  .prose blockquote > * {
    font-size: 0.85rem; /* text-xs */
    line-height: normal;
    color: #a0a0a0; /* text-gray-600 */
    font-style: italic;
    font-weight: 600;
  }
</style>

<BaseLayout
  title=`Project - ${project.data.title}`
  specialDescription={project.data.description}
>
  <div class="md:mx-auto max-w-7xl space-y-3 px-5">
    <h1 class="text-center text-4xl font-bold mt-6">{project.data.title}</h1>

    <div class="flex justify-center items-center gap-3">
      <span class="text-sm text-muted-foreground">
        <FormattedDate date={project.data.pubDate} />
      </span>
      <span class="text-sm text-muted-foreground capitalize border-l pl-3">
        By {project.data.author}
      </span>
    </div>

    <p class="text-center text-muted-foreground mb-6">
      {project.data.description}
    </p>

    <!-- Tech Stack -->
    {
      project.data.tech.length > 0 && (
        <div class="flex justify-center mb-6">
          <div class="flex flex-wrap gap-2 justify-center">
            {project.data.tech.map((tech) => (
              <Badge variant="secondary" className="text-sm">
                {tech}
              </Badge>
            ))}
          </div>
        </div>
      )
    }

    <!-- Project Links -->
    <div class="flex justify-center gap-4 mb-6 pb-6 border-b"></div>

    <div
      class="prose prose-headings:text-article-primary prose-p:text-base/8 prose-p:tracking-wide prose-figcaption:text-xs prose-img:min-w-2xs prose-img:max-w-[21rem] prose-img:xs:min-w-xs prose-img:xs:max-w-sm prose-img:sm:min-w-sm prose-img:sm:max-w-lg prose-img:md:min-w-lg prose-img:md:max-w-3xl prose-h4:mb-12 max-w-none prose-code:py-1 prose-code:rounded-md prose-code:text-sm prose-code:font-mono prose-code:text-gray-800"
    >
      <Content />
    </div>

    <!-- Navigation Buttons -->
    <div class="mt-12 py-8">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <!-- Previous Button -->
        <a
          href={`/projects/${prevProject.slug}`}
          class="group flex flex-col p-4 rounded-lg border border-gray-200 hover:border-gray-300 hover:bg-gray-50 transition-all duration-200"
        >
          <span class="text-sm text-muted-foreground mb-1">PREV</span>
          <span class="font-medium text-lg transition-colors">
            {prevProject.title}
          </span>
        </a>

        <!-- Next Button -->
        <a
          href={`/projects/${nextProject.slug}`}
          class="group flex flex-col p-4 rounded-lg border border-gray-200 hover:border-gray-300 hover:bg-gray-50 transition-all duration-200 text-right"
        >
          <span class="text-sm text-muted-foreground mb-1">NEXT</span>
          <span class="font-medium text-lg transition-colors">
            {nextProject.title}
          </span>
        </a>
      </div>
    </div>
  </div>
</BaseLayout>
