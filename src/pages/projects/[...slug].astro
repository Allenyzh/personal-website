---
export const prerender = true;
import { type CollectionEntry, getCollection, render } from "astro:content";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project, index) => {
    const slug =
      project.data.slug ||
      project.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    // 计算上一个和下一个项目的索引（循环）
    const prevIndex = index === 0 ? projects.length - 1 : index - 1;
    const nextIndex = index === projects.length - 1 ? 0 : index + 1;

    const prevProject = projects[prevIndex];
    const nextProject = projects[nextIndex];

    const prevSlug =
      prevProject.data.slug ||
      prevProject.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    const nextSlug =
      nextProject.data.slug ||
      nextProject.data.title
        .toLowerCase()
        .replace(/[^a-z0-9]+/g, "-")
        .replace(/^-+|-+$/g, "");

    return {
      params: {
        slug: slug,
      },
      props: {
        project,
        prevProject: {
          title: prevProject.data.title,
          slug: prevSlug,
        },
        nextProject: {
          title: nextProject.data.title,
          slug: nextSlug,
        },
      },
    };
  });
}

type Props = {
  project: CollectionEntry<"projects">;
  prevProject: { title: string; slug: string };
  nextProject: { title: string; slug: string };
};

const { project, prevProject, nextProject } = Astro.props;
const { Content } = await render(project);
const readingTimeResult = readingTime(project.body || "");
---

<ArticleLayout
  title={project.data.title}
  description={project.data.description}
  pubDate={project.data.pubDate}
  author={project.data.author}
  tech={project.data.tech}
  prevItem={prevProject}
  nextItem={nextProject}
  collectionType="projects"
  readingTime={readingTimeResult.text}
>
  <Content />
</ArticleLayout>
