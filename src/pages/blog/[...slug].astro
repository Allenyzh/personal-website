---
export const prerender = true;
import { type CollectionEntry, getCollection, render } from "astro:content";
import ArticleLayout from "@/layouts/ArticleLayout.astro";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post, index) => {
    // 计算上一个和下一个博客的索引（循环）
    const prevIndex = index === 0 ? posts.length - 1 : index - 1;
    const nextIndex = index === posts.length - 1 ? 0 : index + 1;

    const prevPost = posts[prevIndex];
    const nextPost = posts[nextIndex];

    return {
      params: { slug: post.data.slug || post.id },
      props: {
        post,
        prevPost: {
          title: prevPost.data.title,
          slug: prevPost.data.slug || prevPost.id,
        },
        nextPost: {
          title: nextPost.data.title,
          slug: nextPost.data.slug || nextPost.id,
        },
      },
    };
  });
}

type Props = {
  post: CollectionEntry<"blog">;
  prevPost: { title: string; slug: string };
  nextPost: { title: string; slug: string };
};

const { post, prevPost, nextPost } = Astro.props;
const { Content } = await render(post);
const readingTimeResult = readingTime(post.body || "");
---

<ArticleLayout
  title={post.data.title}
  description={post.data.description}
  pubDate={post.data.pubDate}
  author={post.data.author}
  prevItem={prevPost}
  nextItem={nextPost}
  collectionType="blog"
  readingTime={readingTimeResult.text}
>
  <Content />
</ArticleLayout>
